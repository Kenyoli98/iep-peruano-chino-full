const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function cargaMasivaSecciones() {
  try {
    console.log('üöÄ Iniciando carga masiva de secciones...');
    
    const secciones = [
      // Inicial - 3 a√±os
      { nombre: 'Secci√≥n A', nivel: 'Inicial', grado: 3 },
      { nombre: 'Secci√≥n B', nivel: 'Inicial', grado: 3 },
      { nombre: 'Secci√≥n C', nivel: 'Inicial', grado: 3 },
      
      // Inicial - 4 a√±os
      { nombre: 'Secci√≥n A', nivel: 'Inicial', grado: 4 },
      { nombre: 'Secci√≥n B', nivel: 'Inicial', grado: 4 },
      { nombre: 'Secci√≥n C', nivel: 'Inicial', grado: 4 },
      { nombre: 'Secci√≥n D', nivel: 'Inicial', grado: 4 },
      
      // Inicial - 5 a√±os
      { nombre: 'Secci√≥n A', nivel: 'Inicial', grado: 5 },
      { nombre: 'Secci√≥n B', nivel: 'Inicial', grado: 5 },
      { nombre: 'Secci√≥n C', nivel: 'Inicial', grado: 5 },
      { nombre: 'Secci√≥n D', nivel: 'Inicial', grado: 5 },
      { nombre: 'Secci√≥n E', nivel: 'Inicial', grado: 5 },
      
      // Primaria - 1¬∞ grado
      { nombre: 'Secci√≥n A', nivel: 'Primaria', grado: 1 },
      { nombre: 'Secci√≥n B', nivel: 'Primaria', grado: 1 },
      { nombre: 'Secci√≥n C', nivel: 'Primaria', grado: 1 },
      { nombre: 'Secci√≥n D', nivel: 'Primaria', grado: 1 },
      { nombre: 'Secci√≥n E', nivel: 'Primaria', grado: 1 },
      { nombre: 'Secci√≥n F', nivel: 'Primaria', grado: 1 },
      
      // Primaria - 2¬∞ grado
      { nombre: 'Secci√≥n A', nivel: 'Primaria', grado: 2 },
      { nombre: 'Secci√≥n B', nivel: 'Primaria', grado: 2 },
      { nombre: 'Secci√≥n C', nivel: 'Primaria', grado: 2 },
      { nombre: 'Secci√≥n D', nivel: 'Primaria', grado: 2 },
      { nombre: 'Secci√≥n E', nivel: 'Primaria', grado: 2 },
      { nombre: 'Secci√≥n F', nivel: 'Primaria', grado: 2 },
      
      // Primaria - 3¬∞ grado
      { nombre: 'Secci√≥n A', nivel: 'Primaria', grado: 3 },
      { nombre: 'Secci√≥n B', nivel: 'Primaria', grado: 3 },
      { nombre: 'Secci√≥n C', nivel: 'Primaria', grado: 3 },
      { nombre: 'Secci√≥n D', nivel: 'Primaria', grado: 3 },
      { nombre: 'Secci√≥n E', nivel: 'Primaria', grado: 3 },
      { nombre: 'Secci√≥n F', nivel: 'Primaria', grado: 3 },
      
      // Primaria - 4¬∞ grado
      { nombre: 'Secci√≥n A', nivel: 'Primaria', grado: 4 },
      { nombre: 'Secci√≥n B', nivel: 'Primaria', grado: 4 },
      { nombre: 'Secci√≥n C', nivel: 'Primaria', grado: 4 },
      { nombre: 'Secci√≥n D', nivel: 'Primaria', grado: 4 },
      { nombre: 'Secci√≥n E', nivel: 'Primaria', grado: 4 },
      { nombre: 'Secci√≥n F', nivel: 'Primaria', grado: 4 },
      
      // Primaria - 5¬∞ grado
      { nombre: 'Secci√≥n A', nivel: 'Primaria', grado: 5 },
      { nombre: 'Secci√≥n B', nivel: 'Primaria', grado: 5 },
      { nombre: 'Secci√≥n C', nivel: 'Primaria', grado: 5 },
      { nombre: 'Secci√≥n D', nivel: 'Primaria', grado: 5 },
      { nombre: 'Secci√≥n E', nivel: 'Primaria', grado: 5 },
      { nombre: 'Secci√≥n F', nivel: 'Primaria', grado: 5 },
      
      // Primaria - 6¬∞ grado
      { nombre: 'Secci√≥n A', nivel: 'Primaria', grado: 6 },
      { nombre: 'Secci√≥n B', nivel: 'Primaria', grado: 6 },
      { nombre: 'Secci√≥n C', nivel: 'Primaria', grado: 6 },
      { nombre: 'Secci√≥n D', nivel: 'Primaria', grado: 6 },
      { nombre: 'Secci√≥n E', nivel: 'Primaria', grado: 6 },
      { nombre: 'Secci√≥n F', nivel: 'Primaria', grado: 6 },
      
      // Secundaria - 1¬∞ grado
      { nombre: 'Secci√≥n A', nivel: 'Secundaria', grado: 1 },
      { nombre: 'Secci√≥n B', nivel: 'Secundaria', grado: 1 },
      { nombre: 'Secci√≥n C', nivel: 'Secundaria', grado: 1 },
      { nombre: 'Secci√≥n D', nivel: 'Secundaria', grado: 1 },
      { nombre: 'Secci√≥n E', nivel: 'Secundaria', grado: 1 },
      
      // Secundaria - 2¬∞ grado
      { nombre: 'Secci√≥n A', nivel: 'Secundaria', grado: 2 },
      { nombre: 'Secci√≥n B', nivel: 'Secundaria', grado: 2 },
      { nombre: 'Secci√≥n C', nivel: 'Secundaria', grado: 2 },
      { nombre: 'Secci√≥n D', nivel: 'Secundaria', grado: 2 },
      { nombre: 'Secci√≥n E', nivel: 'Secundaria', grado: 2 },
      
      // Secundaria - 3¬∞ grado
      { nombre: 'Secci√≥n A', nivel: 'Secundaria', grado: 3 },
      { nombre: 'Secci√≥n B', nivel: 'Secundaria', grado: 3 },
      { nombre: 'Secci√≥n C', nivel: 'Secundaria', grado: 3 },
      { nombre: 'Secci√≥n D', nivel: 'Secundaria', grado: 3 },
      { nombre: 'Secci√≥n E', nivel: 'Secundaria', grado: 3 },
      
      // Secundaria - 4¬∞ grado
      { nombre: 'Secci√≥n A', nivel: 'Secundaria', grado: 4 },
      { nombre: 'Secci√≥n B', nivel: 'Secundaria', grado: 4 },
      { nombre: 'Secci√≥n C', nivel: 'Secundaria', grado: 4 },
      { nombre: 'Secci√≥n D', nivel: 'Secundaria', grado: 4 },
      { nombre: 'Secci√≥n E', nivel: 'Secundaria', grado: 4 },
      
      // Secundaria - 5¬∞ grado
      { nombre: 'Secci√≥n A', nivel: 'Secundaria', grado: 5 },
      { nombre: 'Secci√≥n B', nivel: 'Secundaria', grado: 5 },
      { nombre: 'Secci√≥n C', nivel: 'Secundaria', grado: 5 },
      { nombre: 'Secci√≥n D', nivel: 'Secundaria', grado: 5 },
      { nombre: 'Secci√≥n E', nivel: 'Secundaria', grado: 5 }
    ];

    console.log(`üìä Total de secciones a crear: ${secciones.length}`);
    
    let creadas = 0;
    let duplicadas = 0;
    let errores = 0;

    for (const seccion of secciones) {
      try {
        // Verificar si ya existe
        const existente = await prisma.seccion.findFirst({
          where: {
            nombre: seccion.nombre,
            nivel: seccion.nivel,
            grado: seccion.grado
          }
        });

        if (existente) {
          console.log(`‚ö†Ô∏è  Ya existe: ${seccion.nombre} - ${seccion.nivel} ${seccion.grado}¬∞`);
          duplicadas++;
          continue;
        }

        // Crear la secci√≥n
        await prisma.seccion.create({
          data: seccion
        });
        
        console.log(`‚úÖ Creada: ${seccion.nombre} - ${seccion.nivel} ${seccion.grado}¬∞`);
        creadas++;
        
      } catch (error) {
        console.error(`‚ùå Error creando ${seccion.nombre} - ${seccion.nivel} ${seccion.grado}¬∞:`, error.message);
        errores++;
      }
    }

    console.log('\nüìà RESUMEN DE CARGA MASIVA:');
    console.log(`‚úÖ Secciones creadas: ${creadas}`);
    console.log(`‚ö†Ô∏è  Secciones duplicadas (omitidas): ${duplicadas}`);
    console.log(`‚ùå Errores: ${errores}`);
    console.log(`üìä Total procesadas: ${creadas + duplicadas + errores}`);
    
    // Mostrar estad√≠sticas por nivel
    const estadisticas = await prisma.seccion.groupBy({
      by: ['nivel'],
      _count: {
        id: true
      }
    });
    
    console.log('\nüìä ESTAD√çSTICAS POR NIVEL:');
    for (const stat of estadisticas) {
      console.log(`${stat.nivel}: ${stat._count.id} secciones`);
    }
    
    console.log('\nüéâ Carga masiva completada exitosamente!');
    
  } catch (error) {
    console.error('üí• Error en la carga masiva:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// Ejecutar el script
cargaMasivaSecciones();