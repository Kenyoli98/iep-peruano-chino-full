const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function eliminarAsignacionSeccionE() {
  try {
    console.log(
      'üîç Buscando la asignaci√≥n que bloquea la eliminaci√≥n de la secci√≥n E...'
    );

    // Buscar la secci√≥n E
    const seccion = await prisma.seccion.findFirst({
      where: {
        nombre: 'E',
        nivel: 'INICIAL',
        grado: 3
      }
    });

    if (!seccion) {
      console.log('‚ùå No se encontr√≥ la secci√≥n E de INICIAL grado 3');
      return;
    }

    // Buscar la asignaci√≥n espec√≠fica
    const asignacion = await prisma.asignacionProfesor.findFirst({
      where: { seccionId: seccion.id },
      include: {
        profesor: {
          select: { nombre: true, apellido: true }
        },
        curso: {
          select: { nombre: true }
        }
      }
    });

    if (!asignacion) {
      console.log('‚úÖ No hay asignaciones que eliminar');
      return;
    }

    console.log('üìã Asignaci√≥n encontrada:');
    console.log(`   ID: ${asignacion.id}`);
    console.log(
      `   Profesor: ${asignacion.profesor.nombre} ${asignacion.profesor.apellido}`
    );
    console.log(`   Curso: ${asignacion.curso.nombre}`);
    console.log(`   A√±o acad√©mico: ${asignacion.anioAcademico}`);

    console.log(
      '\n‚ö†Ô∏è  ¬øDeseas eliminar esta asignaci√≥n? (Esto permitir√° eliminar la secci√≥n E)'
    );
    console.log('\nüîÑ Eliminando asignaci√≥n...');

    // Eliminar la asignaci√≥n
    await prisma.asignacionProfesor.delete({
      where: { id: asignacion.id }
    });

    console.log('‚úÖ Asignaci√≥n eliminada exitosamente');
    console.log(
      '\nüéâ Ahora puedes eliminar la secci√≥n E de INICIAL grado 3 desde la interfaz web'
    );

    // Verificar que ya no hay asignaciones
    const asignacionesRestantes = await prisma.asignacionProfesor.findMany({
      where: { seccionId: seccion.id }
    });

    console.log(`\nüîç Asignaciones restantes: ${asignacionesRestantes.length}`);

    if (asignacionesRestantes.length === 0) {
      console.log('‚úÖ La secci√≥n E est√° lista para ser eliminada');
    }
  } catch (error) {
    console.error('‚ùå Error al eliminar la asignaci√≥n:', error);
  } finally {
    await prisma.$disconnect();
  }
}

eliminarAsignacionSeccionE();
